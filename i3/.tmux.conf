# ` is an interesting key for a prefix
set -g prefix M-a
unbind-key C-b

# Maximize current pane
# unbind +
# bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom

# Un-maximize
# unbind -
# bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

# Use `` to write a `
# bind-key ` send-prefix

# change current window
bind-key -n M-BTab previous-window
bind-key -n M-Tab next-window

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# back to previous session
# bind-key -n M-h switch-client -l

# Create new window with current path
bind-key c new-window -c "#{pane_current_path}"

# split with current path
bind-key v split-window -h -c "#{pane_current_path}"

# vertical split with current path
bind-key h split-window -c "#{pane_current_path}"

# split the window with tig status
# bind-key t split-window "tig status"
# bind-key T split-window -h "tig status"

# split the window with scala repl
# bind-key s split-window "scala"
# bind-key S split-window -h "scala"

# kill the current window
bind-key K kill-window

# Enter session choices (Same as `s)
#bind-key -n M-h choose-session
# bind-key -n M-i neww ~/.tmux/menu

# rotate current pane
# unbind-key o
# bind-key -n M-Space select-pane -t :.+

# rotate panes order
# unbind-key M-o
# bind-key M-Space rotate-window -D

# enter copy mode
#unbind-key PPage
# bind-key -n C-PPage copy-mode -u

# Resize pane without the prefix
# bind-key -n C-Up resize-pane -U
# bind-key -n C-Down resize-pane -D
# bind-key -n C-Left resize-pane -L
# bind-key -n C-Right resize-pane -R

# fix $TERM
# Enable xterm-keys for control-tab
set -g default-terminal "screen-256color"
set-option -gw xterm-keys on

# scrollback buffer n lines
set -g history-limit 8000

# start window indexing at one instead of zero
set -g base-index 1

# don't fucking wait when I press <esc>
set -s escape-time 1

# move tmux copy buffer into x clipboard
bind-key -n M-y save-buffer /tmp/tmux-buffer \; run-shell "cat /tmp/tmux-buffer | xclip"

# move tmux copy buffer into google search
bind-key -n M-g save-buffer /tmp/tmux-buffer \; run-shell "gg $(cat /tmp/tmux-buffer)"

# statusbar --------------------------------------------------------------

# Time display messages in status bar
set -g display-time 1000

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr default

# listen for activity on all windows
set -g bell-action none

# a message is shown on a bell instead of it being passed through to the terminal
set -g visual-bell off
set -g bell-on-alert off

# command/message line colors
set -g message-fg white
set -g message-bg blue
set -g message-attr bright

# Refresh status line every n second
set -g status-interval 2

set -g status-left-length 60
set -g status-left "#[fg=colour2]#S #[default]"

set -g status-right-length 200
set -g status-right "#(cat /tmp/tmux-status)"

# use vi bindings in esc mode
set-window-option -g mode-keys vi
set-option -g status-keys vi

# Give me my hj keys back for scrolling (colemak)
bind-key -t vi-copy n cursor-down
bind-key -t vi-copy e cursor-up
bind-key -t vi-copy C-n page-down
bind-key -t vi-copy C-e page-up

# Restore page-up on copy-mode
#bind-key -t vi-copy PPage page-up

# utf8 support
set-window-option -g utf8 on

# enable mouse by default
set-window-option -g mode-mouse on
set-window-option -g mouse-select-pane on
set-window-option -g mouse-resize-pane on
set-window-option -g mouse-select-window on

bind M \
  set-window-option -g mode-mouse off\;\
  set-window-option -g mouse-select-pane off\;\
  set-window-option -g mouse-resize-pane off\;\
  set-window-option -g mouse-select-window off\;\
  display 'Mouse: OFF'

bind m \
  set-window-option -g mode-mouse on\;\
  set-window-option -g mouse-select-pane on\;\
  set-window-option -g mouse-resize-pane on\;\
  set-window-option -g mouse-select-window on\;\
  display 'Mouse: ON'

# this looks broken
set-window-option -g automatic-rename off

# Monitor for activity in the window. Windows with activity are highlighted in the status line.
set-window-option -g monitor-activity on

# Set status bar on the top
set-option -g status-position top
# Show short windows names in status bar
set-window-option -g window-status-format ' #I '
set-window-option -g window-status-current-format '⎝#I⎠'

# default window title colors
set-window-option -g window-status-fg colour10
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default

# active window title colors
set-window-option -g window-status-current-fg colour14
set-window-option -g window-status-current-bg colour8
set-window-option -g window-status-current-attr bright

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Clear screen
bind C-l send-keys 'C-l'

# Reload tmux conf
bind R source-file ~/.tmux.conf


# vim: filetype=tmux
