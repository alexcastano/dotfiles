" Pathogen
execute pathogen#infect()
" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
syntax on

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
            \| exe "normal g'\"" | endif

" Uncomment the following to have Vim load indentation rules according to the
" detected filetype. Per default Debian Vim only load filetype specific
" plugins.
filetype indent on

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
set showcmd		" Show (partial) command in status line.
set ignorecase		" Do case insensitive matching
set smartcase		" Do smart case matching
set incsearch		" Incremental search
set hls             " Highlight
set autowrite		" Automatically save before commands like :next and :make
set hidden             " Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes) in terminals

" set ruler
" set tabstop=4
" set softtabstop=4
" set shiftwidth=4
" set expandtab
" set smarttab
" set showmatch
" set foldmethod=syntax

"setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb

abbr #i #include
abbr #d #define
"abbr @aut @author Alejandro Castano del Castillo

" Guarda la ultima posicion donde se edito el fichero
" nnoremap <Tab> :bn<CR>
" nnoremap ,<Tab> :bp<CR>

" set makeprg=vim-cmake-makeprg

" Completion commands with tab
set wildmode=longest,list,full
set wildmenu


" Completition
" set nocp
" filetype plugin on
" set tags+=~/.vim/tags/qt4
" set tags+=./tags
" au FileType html :silent exe ":!chromium ".expand("%:p")

" autocmd FileType python set omnifunc=pythoncomplete#Complete
" autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
" autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
" autocmd FileType css set omnifunc=csscomplete#CompleteCSS
" autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
" autocmd FileType php set omnifunc=phpcomplete#CompletePHP
" autocmd FileType c set omnifunc=ccomplete#CompleteCpp

" build tags of your own project with CTRL+F12
" map <C-F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
" noremap <F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<cr>
" inoremap <F12> <Esc>:!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<cr>

" noremap <F11> :!cscope -b -R<CR>
" \:cs add cscope.out<CR>
"
" OmniCppComplete
" let OmniCpp_NamespaceSearch = 1
" let OmniCpp_GlobalScopeSearch = 1
" let OmniCpp_ShowAccess = 1
" let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
" let OmniCpp_MayCompleteDot = 1 " autocomplete after .
" let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
" let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
" let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]
" automatically open and close the popup menu / preview window
" au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
" set completeopt=menuone,menu,longest,preview

filetype plugin indent on

" highligth extre spaces
" highlight ExtraWhitespace ctermbg=red guibg=red
" match ExtraWhitespace /\s\+$/

" sesiones
" map ,s :mksession! ~/.vim/.session
" map ,r :source ~/.vim/.session

set textwidth=80

command WW w !sudo tee % >/dev/null

au BufNewFile,BufRead *.qml set filetype=qml

" Folding of (gnu)make output.
" au BufReadPost quickfix setlocal foldmethod=marker
" au BufReadPost quickfix setlocal foldmarker=Entering\ directory,Leaving\ directory
" au BufReadPost quickfix map <buffer> <silent> zq zM:g/error:/normal zv<CR>
" au BufReadPost quickfix map <buffer> <silent> zw zq:g/warning:/normal zv<CR>
" au BufReadPost quickfix normal zq

colorscheme railscasts2

:command -bar -nargs=1 OpenURL :!chromium <args>

" Add recently accessed projects menu (project plugin)
" set viminfo^=!

" Minibuffer Explorer Settings
" let g:miniBufExplMapWindowNavVim = 1
" let g:miniBufExplMapWindowNavArrows = 1
" let g:miniBufExplMapCTabSwitchBufs = 1
" let g:miniBufExplModSelTarget = 1

" alt+n or alt+p to navigate between entries in QuickFix
" map   :cp 
" map   :cn 


let g:rails_default_file='config/database.yml'

set cf  " Enable error files & error jumping.
set clipboard+=unnamed  " Yanks go on clipboard instead.
" set history=256  " Number of things to remember in history.
set autowrite  " Writes on make/shell commands
set ruler  " Ruler on
" set nu  " Line numbers on
set nowrap  " Line wrapping off
set timeoutlen=250  " Time to wait after ESC (default causes an annoying delay)
" colorscheme vividchalk  " Uncomment this to set a default theme
"
" Formatting (some of these are for coding in C and C++)
set ts=2  " Tabs are 2 spaces
set bs=2  " Backspace over everything in insert mode
set shiftwidth=2  " Tabs under smart indent
set nocp incsearch
set cinoptions=:0,p0,t0
set cinwords=if,else,while,do,for,switch,case
set formatoptions=tcqr
set cindent
set autoindent
set smarttab
set expandtab
" 
" " Visual
set showmatch  " Show matching brackets.
set mat=5  " Bracket blinking.
" set list
" Show $ at end of line and trailing space as ~
" set lcs=tab:\ \ ,eol:$,trail:~,extends:>,precedes:<
"
" No blinking  No noise
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

set laststatus=2  " Always show status line.
" 
" gvim specific
set mousehide  " Hide mouse after chars typed
set mouse=a  " Mouse in all modes
" 
set backup                     " Enable creation of backup file.
set backupdir=~/.vim/backups " Where backups will go.
set directory=~/.vim/tmp     " Where temporary files will go.
